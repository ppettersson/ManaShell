=== The Development Plan ===

0.1	[done]	UI in a presentable state.
0.2	[done]	Piped process with both input and output.
0.3	[done]	Source editor.

0.4	[todo]	PDB plugin: http://docs.python.org/3.3/library/pdb.html
			- Very basic python debugging.
			- Keep it 2.6/7 compatible.

			python -i -m pdb /path/to/script.py

			ui:
				- option to just pick script (with browse button).
					- optional path to python executable/script.
					- optional arguments.
				- custom command line.

				- all options should be persistent
					- editable dropdown with recent items.

				- disable frames:
					- threads
					- registers
					- locals

			callstack:
				w / where
				d / down
				u / up

				- can probably take some shortcut with the output from
				  stepping to avoid issuing this too often.

			breakpoints:
				b / break	filename:line
				cl / clear	filename:line

			stepping:
				s / step		(update callstack)
				n / next
				r / return		(update callstack)

			watch:
				p expression

			run
			c / continue		(update callstack)
			SIGINT
				http://msdn.microsoft.com/en-us/library/windows/desktop/ms682425(v=vs.85).aspx
				http://forums.wxwidgets.org/viewtopic.php?t=35304&p=144458
				http://social.msdn.microsoft.com/Forums/windowsdesktop/en-US/dc9586ab-1ee8-41aa-a775-cf4828ac1239/how-to-send-ctrlc-signal-to-detached-commandline-process?forum=windowsgeneraldevelopmentissues
			q / quit

			input:
				- parse the message and match against any backtrace etc
				  that we can pick up for free.
				- good workaround to reset the UI when the state gets messes up.


0.5	[todo]	GDB Command Line plugin: https://sourceware.org/gdb/current/onlinedocs/gdb/
			- Not using the Machine Interpreter mode (that would be a separate plugin).
			- Attach to android process.
			- Very basic gdb debugging.

0.55 [todo]	Post mortem dry-run.
			- import callstack from text
				- given at least one source directory, grep to find matching file:line pairs.
					- configurable format, with scanf: %s|%d
			- edit manually
				- add / remove / edit frame.

0.6	[todo]	UI polish.
			- More plugin-ish:
				- Automatically enumerate all enabled debuggers.
					- Help->Name+URL
					- Debug->Start...->Populate a notebook page

			- Fix initial sizes and positions of frames.
				- will probably have to be tweaked per OS.
				- Input should only be one line high.

			- Highlight current line in the source editor.
			- Keyboard shortcuts.
				- configurable.
			- Toolbar.
			- Save/Load perspectives.
			- Output text control.
				- Separate output for debugger and process?
				- Local toolbar:
					- Clear all.
					- Word wrap.
					- Save as...
			- Input text control:
				- history.
				- read only if no active process running.
				- read only if process isn't currently paused.
			- Menu.
				- disable unavailable options.
			- Options.
				- Persistent on disc.
			- Callstack.
				- Option to toggle:
					- return type.
					- argument values.
					- argument names.
					- argument types.
			- Grid polish.
				- Automatic size adjustments of grid cells.
				- Reduce height of the header.
			- Source editor:
				- Keep the current line centerish when debugging.
				- Should not have a window frame, look at wx/samples/aui
				- Markers are positioned wrong horizontally.
				- Code folding.

0.7	[todo]	JDB plugin: http://docs.oracle.com/javase/1.3/docs/tooldocs/solaris/jdb.html
			- Very basic java debugging.

0.8	[todo]	Port.
			- Linux.
			- OSX.
			- Windows.
			- Installers.

0.9	[todo]	Write docs.
			- Installing.
				- Building from source.
			- Tutorials.
				- Debugging a python script.
				- Debugging an Android NDK sample, both java and native.
			- Reference.
			- Troubleshooting.

1.0	[todo]	Beta.
			- Create a project homepage.
				- Overview.
				- Downloads.
				- Bugtracker.
				- Forum.
			- Release tag for master branch.

1.0.x		Final.


=== Wishlist for Future versions ===

- Tools:
	- logcat viewer with filters.
	- debug image viewer (wxImageView).
- Plugins:
	- gdb/mi
	- lldb
	- make: http://www.cmcrossroads.com/article/interactive-gnu-make-debugger
	- bash: http://bashdb.sourceforge.net
- Optional project view:
	- Make it easier when setting breakpoints.
	- Find and open file (fuzzy search).
	- Nested Include/Exclude of folders and filetypes.
- Optional build system:
	- Call Makefile.
	- Parse gcc output and present it nicely.
		- Fold away compile arguments (includes, defines etc).
		- Jump to error/warning.
			- Fold away callstack.
	- Parse javac output.


=== Known Bugs ===

- Text input stream in piped process assumes the output from the inferior
  process is unicode when it's really ascii. Investigate if it's our bug,
  a wx bug or maybe a Windows bug.
- Crash on shutdown if a process is running.
